http://fcraft.fragmer.net/fCraftUpdater.exe
2011-01-25
501
 Feature: Added /sphere and /sphere2, based on code contributed by SystemX17.
 Feature: Added new config setting: ShowConnectedMessages (default: true)
 Feature: Added a notification for players who logged in frozen.
 Fix: Fixed frozen players twitching.
 Fix: Fixed IRC bot not stripping color codes in messages relayed from IRC to the game.
 Fix: Fixed lastSeen and lastLoginDate not being set for first-time players who failed to log in (e.g. IP-banned).
 Fix: Fixed /bring not working properly on frozen players.
 Fix: Fixed a case where it was possible to add access restrictions to main map.
 Fix: Fixed per-world whitelists/blacklists being lost when editing worlds.xml via ConfigTool.
 Fix: Fixed AutoRankAll showing wrong number of players promoted/demoted (just a formatting bug, no promotions were affected)
500
 Commands: Added /line drawing command, kindly contributed by SystemX17
 Commands: Added /restart command, to restart the server remotely (NOTE: does not work for fCraftWinService yet)
 Commands: Added /unmute command (same as "/mute name 0")
 Commands: Added an option to silently hide (no disconnect/connect message).
 Commands: Added /ignore and /unignore commands to block chat from another player (for the duration of your visit).
 Commands: /whide and /wunhide commands added to hide/unhide worlds from the list.
 Commands: /worlds now takes an optional param: "/worlds all" lists visible+hidden worlds, and "/worlds hidden" lists hidden worlds only.
 Commands: List of player names from the same IP is now shown in /info.
 Commands: /help now shows what rank you need to be to use a command (for most commands).
 Commands: /bring now works on frozen players.
 Commands: /bring now takes an optional second name/parameter, to teleport someone to someone
 Commands: /info now shows whether a player is hidden (if the command caller has permission to see).
 Commands: Fixed a case where teleporting to a player who is currently changing worlds brings one to a wrong location.
 Commands: Fixed bindings (/water, /lava, /solid, and /bind) not being applied to draw commands.
 Commands: /wsave and /gen can now create directories if needed.
 Commands: Fixed a bug in /roll
 Commands: Sped up /paste, /pastenot, /replace, and /replacenot slightly.
 ConfigTool: New "Chat" tab for controlling appearance and content of in-game chat.
 ConfigTool: Added ability to customize MeColor (for /me messages, default: purple) and WarningColor (for major errors/warnings, default: red) in config.
 ConfigTool: AddWorldPopup can now show detailed info for maps of all supported formats.
 ConfigTool: Improved tooltips for several items in ConfigUI.
 FrontEnd: Uncaught exceptions that happen while executing commands from fCraftUI console are now handled by the crash reporter (instead of actually crashing).
 FrontEnd: Added /clear command for fCraftUI and fCraftConsole - clears log screen.
 FrontEnd: The URL is no longer highlighted after first heartbeat, to avoid stealing focus from console.
 Generator: Fixed "flatgrass" template
 Generator: Fixed alphabetical order in the list of templates
 Generator: MapGenerator now embeds generation parameters into the map file metadata
 Generator: Fixed several template loading bugs.
 Generator: Optimized AddBeaches to be about 2x faster
 Generator: Added a missing dimension check to /gen
 IRC: Messages relayed from game to IRC now have color codes preserved.
 IRC: Kicks, Bans, unbans, promotions, and demotions can now be relayed to IRC.
 IRC: IRC bot now relays /say messages, and /me messages (both /me on IRC and /me on the server).
 IRC: IRC Error handling is greatly improved.
 IRC: (Threaded) If one of the bots loses connection, one of the other bots take over parsing input.
 IRC: Increased IRC reconnect delay to 15 seconds.
 Maps: Switched to a new file format (FCMv3) that allows for future additions like block tracking and physics.
 Maps: Much of MCC (map conversion) API was rewritten for better consistency and performance.
 Maps: Improved support for loading indev (pre-infinite) maps, including Omen-generated maps.
 Maps: Improved resilience for loading maps with unknown blocktypes. Instead of failing, it just replaces any unknown blocks with air.
 Maps: Added consistent header validation to all map format loaders.
 Maps: Fixed maps not autosaving when zones are added or removed.
 Maps: Zone definitions are now serialized to XML. Zones saved with this revision of fCraft will no longer be readable by older version of fCraft.
 Maps: Fixed a bug when loading JTE's format maps.
 Maps: Fixed format of backup filenames.
 PlayerDB: Added new fields: bannedUntil, loggedOutFrozen, frozenBy, mutedUntil, mutedBy, IRCPassword, online, leaveReason, mutedBy, mutedUntil, frozenBy, frozenOn
 PlayerDB: Fixed PlayerInfo.ID not being assigned for new players until sever restart / DB reload.
 PlayerDB: Fixed off-by-one error with PlayerInfo.timesVisited
 PlayerDB: Fixed /me, /say, rank chat, and /staff not counting towards PlayerInfo.linesWritten
 PlayerDB: Made PlayerDB more resilient to errors. Reduced filesize slightly by omitting default values for more date fields, and removing milliseconds from "totalTime"
 PlayerDB: Improved forwards compatibility of PlayerDB by removing maximum-field-count check.
 Security: Worlds can now have player whitelists and blacklists (just like zones) for access and build permissions.
 Security: Added a security check to /wsave, /wload, and /gen to prevent reading or overwriting files outside the map folder.
 Security: Added a per-rank security option to prevent players from whitelisting themselves, removing themselves from blacklists, or lowering their rank's restrictions on worlds and zones.
 Security: /mute and /freeze are now persistent even if the player reconnects.
 Security: Relaxed SetTile packet checks. Players will no longer be kicked due to Minecraft client bugs.
 Security: Fixed an exploit that allowed changing steps to doublesteps even inside zoned areas.
 Security: Improved consistency of permission dependencies.
 Security: Fixed a security exploit in /wmain that allowed players with ManageWorlds permission to gain access to restricted worlds.
 Security: Fixed a bug that prevented banning players who were not yet in PlayerDB.
 Security: Added an option to only allow paid players (PaidPlayersOnly)
 Stability: Made crash reporting more reliable. A failed crash report will no longer prevent error message from being logged and displayed.
 Stability: Fixed a crash in AddWorldPopup if dialog is closed while a map is still loading.
 Stability: To improve compatibility with some bots, removed "almost there..." message on the loading screen
 Stability: Disabled error reporting of common non-fCraft-related errors (like wrong runtime versions, or wrong Mono permissions).
 Stability: Added "libMonoPosixHelper.so" and "UnauthorizedAccessException" to Logger.CheckForCommonErrors, and made "Could not load file or assembly" check locale-independent.
 Stability: A backup file is now created whenever PlayerDB, IP ban list, config, or world list are saved (e.g. PlayerDB.txt.backup)
 Stability: Crash reporter now sends last 25 lines of the log.
 Stability: Added a fallback overload for Player.Message() that bypasses string format, to make the whole thing less prone to format errors.
 System: fCraft now takes command-line arguments (at startup) to override the following:
 - working directory (--path=/your/path/here)
 - log directory (--logpath=/your/path/here)
 - map directory (--logpath=/your/path/here) - also overridable in a more user-friendly way via ConfigTool (MapPath key)
 - config file location (--config=/your/path/and/filename.xml)
 System: Added an option to change the name of Console pseudoplayer in the config.
 System: Player.GetClassyName() and PlayerInfo.GetClassyName() now add an asterisk after banned players' names
 System: Fixed hidden players remaining hidden in some cases.
 System: Fixed PacketWriter.MakeWrappedMessage ignoring uppercase hex colorcodes
 System: Implemented NoPartialPositionUpdates and RelayAllUpdates config keys.
 System: Several little glitches and inefficiencies fixed in movement handling code.
 System: Fixed "player connected" and other messages showing up too early in-game (before map loaded).
 System: Fixed kick message for players affected by /banall
 System: Added HeartbeatEnabled config key (default: true)
 System: Fixed a case where heartbeat could be sent from a different IP than the listening port on systems with multiple NICs/IPs and no configured static IP.
 System: Increased the write buffer for writing out PlayerDB, reducing I/O time by ~20% on .NET, and ~35% on Mono
 System: New Scheduler API.
 System: Modified /wload to avoid loading the map twice in case confirmation is needed.
 System: Changes to AutoRankEnabled will now be applied when /reloadconfig is called.
 System: Fixed unnecessary confirmation being asked when world name matches file name in /wload
 System: Eliminated the heartbeat thread by switching to async i/o.
 System: Improved startup and shutdown speed.
 System: Added a "how to promote yourself" message for fresh installations of fCraft.
 System: Fixed Server.OnPlayerDisconnected event firing for unregistered sessions.
 System: Made Color.Parse() and Color.GetName() translate fCraft-specific color assignments (e.g "&S" for "System")
 System: Added better detection for SMP/Alpha clients trying to connect.
 System: Sped up AutoRankAll
499
 Feature: Added an option to disable name verification for players connecting from LAN.
 Feature: Added 'flat' template to MapGenerator, allowing to make flat maps with any theme.
 Feature: Added 'grass' pseudotheme to /gen command, which is basically the 'Forest' theme with trees disabled.
 Fix: Fixed /wflush leaving ghosts/clones behind.
 Fix: Fixed muted players being able to use /say and /staff
 Fix: Fixed /baninfo ignoring permission checks.
 Fix: Fixed "draw limit" checkbox getting disabled in ConfigTool if a player had 'CopyAndPaste' permission but no 'Draw' permission.
 Fix: Fixed several off-by-1 errors involving random number generation, notably in MapGenerator and Server.GenerateSalt()
 Fix: Fixed potential crash in MapGenerator.SealLiquids
 Fix: Fixed a potential crash in Map.SaveBackup() if the map filename contained brackets.
 Fix: Fixed a forced disconnect when trying to feed /gen a theme or template with brackets in the name.
498
 Change: Disabled zlib support due to more potential memory leaks. fffuuuuu....
 Fix: Fixed Island, Bay, and Ice templates broken by the last patch.
 Fix: MapGeneratorArgs: snowTransition was interpreted as absolute (instead of relative) altitude, and marbledHeightmap incorrectly defaulted to 'true'.
 Change: Updated readme and changelog.
497
 Feature: Added accurate progress reporting from MapGenerator. Coming soon: cancellation.
 Feature: New MapGenerator options: BeachHeight, CliffSmoothing, LandSlope, UnderwaterSlope, MaxHeightVariation, MaxDepthVariation.
 Feature: Added UI controls for snow/cliff/beach settings to AddWorldPopup.
 Feature: Added a list of popular IRC networks to ConfigTool.
 Change: Improved PlayerDB lookup performance by reducing locking.
 Fix: Fixed MapGenerator calculating slope incorrectly at the water boundary.
 Fix: Fixed "Add Ore" requiring "Add Caves" in MapGenerator.
 Fix: Fixed water/lava caves not sealing liquids properly. 
 Change: Set MapGenerator to default to 256x256x96
 Change: AddWorldPopup Generator tab layout overhaul
 Change: Organized MapGeneratorArgs and added serialization/deserialization for all the new options.
496
 Fix: Fixed File.Replace() failing if fCraft was set up on a partition/volume other than the one where temp folder is.
 Fix: Added missing tooltip for "Edit Greeting"
 Fix: Fixed /sinfo including hidden players in the player count.
495
 Feature: Added a way to edit the greeting message, by editing "greeting.txt"
 Feature: When a player gets banned, any previously-banned accounts from same IP are listed.
 Fix: Fixed renaming worlds from ConfigTool's "worlds" tab not always working.
 Fix: Fixed several filesystem-related errors on non-Windows systems by using Path.Combine() instead of string concatenation.
 Fix: Possible workaround for missing heartbeats.
 Fix: Fixed detached "default build rank" controls in ConfigTools.
 Fix: Fixed overwrite confirmation popping up for /wload when loading map into an unloaded world with the same name.
 Fix: Fixed a case where Forester could get into an infinite loop when there's not enough room to place requested number of trees.
494
 Feature: New map generator features:
  - Adjustable water level.
  - Realistic trees (powered by Forester)
  - Snow on mountaintops
  - Realistic cliffs
  - Beaches
  - New template (peninsula) and theme (swamp).
  - Option to delay heightmap bias until after marbling/inversion.
 Feature: Added a way to load .mine maps.
 Feature: Added confirmation for potentially destructive commands: /importranks, /importbans, /massrank, /wload overwrites, /gen overwrites, /wsave overwrites, /zremove.
 Feature: Added /staff chat and ReadStaffChat permission.
 Feature: Added wireframe cuboid (/cw)
 Feature: Added an optional second param for /ch (cuboid hollow) that specifies the blocktype of the "filling".
 Feature: Added a way to specify default build permission for new worlds.
 Fix: Fixed /info, /baninfo, and /banip not handling players whose name
 contain only digits.
 Fix: Fixed DoChangeRank mixing up RankChangeType.
 Fix: Added missing fields to MapGeneratorArgs serializer.
 Fix: Fixed per-rank draw limits not being calculated correctly in some cases.
 Fix: Replaced File.Delete/File.Move calls with a more reliable File.Replace call. This should slightly improve reliability of map/playerdb.txt/ipbans.txt/worlds.xml saving.
 Fix: Fixed a little ConfigTool bug that did not properly reset PatrolledRank after a rank deletion.
 Fix: Fixed terminal colors not resetting in fCraftConsole after a fatal crash under Mono.
 Fix: Fixed detached "Play" button in fCraftUI.
 Fix: Added some basic error reporting to fCraftWinService.
 Change: Tweaked AddWorldPopup layout to accommodate more options.
493
 Feature: /info now supports autocompletion, wildcards, and IP search.
 Feature: Experimental service wrapper for fCraft.
 Feature: Added more editable properties to /setinfo: RankChangeType, BanReason, UnbanReason, RankChangeReason, LastKickReason
 Feature: Various improvements to /info, including hide-aware "online" indicator.
 Feature: Made Player.NoAccessMessage() print the minimum required rank, instead of just permission name(s).
 Feature: Added wootalyzer's chunk rendering code to IsoCat.
 Fix: Fixed ConfigTool not taking advantage of ZLibStream 
 Fix: Fixed a very improbable case of a thread getting spinlocked when calling IRC.Send() is preemptied, and if there are at least 2 IRC threads.
 Fix: Fixed kick packets occasionally not being delivered due to a missing Flush() - thanks to wootalyzer for catching.
 Fix: Excluded banned and inactive players from DumpStats
 Fix: Fixed PlayerDB.Save() not escaping LastKickReason 
 Fix: Cleaned up extra messages sent by /unhide.
 Fix: Fixed LastSeen not updating on-login (only on-logout).
 Fix: Improved the way fCraft checks for ghost/leftover sessions. Thanks to wootalyzer.
 Fix: If a player's name starts with a number, and you try to /tp to a coordinate that starts with the same number, you are no longer teleported to that player instead.
 Fix: Fixed hidden players being detectable by checking LastSeen in /info.
 Fix: To avoid performance degradation, GC calls have been centralized, delayed, limited to 1/minute, and moved to the tasks thread.
 Fix: Added delay between recurring calls to PlayerDB.Save, AutoRankAll, and DoGC - to balance load.
 Fix: Fixed rankChangeType not being updated.
 Fix: Fixed some typos reported by tvc. 
 Change: Added "/uf" as an alias for "/unfreeze", by popular demand. 
 Change: Modified PlayerDB not to use ReaderWriterLockSlim, to avoid Mono issues with recursion.
 Change: Renamed /editplayerinfo to /setinfo
 Change: Made enum values in AutoRank (CriterionType, ConditionField, ComparisonOperation, ConditionScopeType, RankChangeType) case-insensitive.
 Change: Added a reference to /baninfo in /info
 Change: Made DetectMovementPacketSpam warn players instead of kicking.
492
 Feature: Added EditPlayerDB permission. This permission affects the upcoming AutoRank commands, /editplayerinfo, and ability to promote/demote/ban unrecognized players.
 Feature: When you kick a player, you are now shown the number of kicks they already have.
 Feature: More stats are now logged! RankType, TimeSinceLastKick, LastSeen, BlocksDrawn, LastKickBy, LastKickReason.
 Feature: Added "MaxUndo" config key for changing the default undo limit of 2,000,000 blocks per player.
 Feature: /info command is augmented with new stats (if available).
 Fix: Fixed ellipsoid command calculating volume incorrectly for draw limit checks.
 Fix: Fixed overflowing color code in "Player logged in from an IP previously used by banned players" message.
 Fix: Fixed PM recipient's name not getting logged properly.
 Fix: Previously-unseen players no longer have their FirstLoginDate, LastLoginDate, or TimesVisited set.
 Fix: /importranks now works correctly on players who are online at the time of import.
 Change: Added block aliases by popular demand: "bedrock" as an alias for admincrete, "cotton" as alias for "white", and "aire" as alias for "air"
 Change: PlayerDB.txt format changes:
  - MaxFieldCount raised to 36
  - New fields added: UID (Int32), RankChangeType (enum, serialized as Int32), LastKickDate (DateTime), LastSeen (DateTime), BlocksDrawn (Int64), LastKickBy (string), LastKickReason (string).
  - RankChangeBy, BannedBy, UnbannedBy, BanReason, UnbanReason, and RankChangeReason now default to empty string instead of "-" or null.
  - If LastIP==IPAddress.None, empty string is saved instead of "255.255.255.255".
  - DateTime and TimeSpan format shortened to exclude microseconds. See PlayerDB.ToCompactString() for details.
 Change: AutoRank improvements (disabled in stable builds):
  - Added /editplayerinfo command for easy editing of PlayerDB.
  - Made AutoRank check players in-login (to accelerate promotion).
  - AutoRank now runs on a scheduler.
  - Fixed ConditionPreviousRank crash for played with default rank.
  - Fixed banned players getting promoted by AutoRank.
  - Fixed several serialization/loading issues in AutoRank.
  - New fields added to ConditionIntRange: LastSeen, BlocksDrawn, TimeSinceRankChange, TimeSinceLastKick
  - ConditionRankStatus renamed to ConditionRankChangeType
491
 Feature: Added ability to run multiple parallel IRC bots, to help high-traffic servers deal with IRC lag. This also makes it possible to connect to multiple networks in the future.
 Feature: Added new block aliases, by popular demand: "emerald"=teal, "fuchsia"=magenta, "cloth"=white, "lightgray"=gray, "lightgrey"=gray, "darkgray"=black, "darkgrey"=black, "brass"=gold
 Fix: Temporarily disabled 64-bit zlib support while I track down memory leaks. Should fix OutOfMemoryException, I'm very sorry about overlooking that.
 Fix: Fixed a bug in /info that displayed incorrect "total time on server".
 Fix: Per-rank permission checks for /freeze now apply as intended
 Fix: Fixed several improbable (but not impossible) threading deadlocks/crashes. Thanks to wootalyzer for catching these.
 Change: Added IRCThreads config key (default: 1, allowed range: 1-3)
490
 Feature: Testing a new map compressor/decompressor: ZLibStream. It should provide 50-200% speed increase, smaller map sizes, lower bandwidth use, and faster map loading.
 Fix: Fixed /shutdown not waiting the right amount and mixing up seconds/milliseconds.
 Fix: Fixed "No world found with the name..." showing player's own name.
 Fix: Added a fail-safe exception handler to Player.WaitForKick() - a temporary fix.
 Change: Previous verification salt is now stored, to allow players to validate even right after the server restarts.
 Change: Restructured SVN. Stable code is now always in /trunk/
487
 Feature: Added contextual help (tooltips) for all of ConfigTool. Help for "Add World" popup is coming in next version.
 Feature: Added rank limits for Freeze permission
 Fix: Fixed /mute being unusable from console.
 Change: Removed ViewOthersInfo requirement from /sinfo
 Change: Added ViewOthersInfo requirement to /where
 Change: Improvements to IRC tab layout in ConfigTool.
486
 Quick fix for IRC Bot bug that made server unconnectable.
485
 Feature: Added optional "delay" parameter to /shutdown (default: 5)
 Feature: World names can now be autocompleted for many commands (like /join and /lock)
 Fix: Fixed /unhide failing to reveal the player in certain situations.
 Fix: Fixed /setspawn being usable on players from other worlds.
 Fix: Fixed player names appearing white for all players.
 Fix: Fixed a recursion loop in NoWorldMessage()
 Fix: Fixed help entries for /setspawn and /shutdown
 Fix: Fixed potential crash in Server.Shutdown() if called after failed initialization/startup.
 Fix: Fixed potential deadlock/freeze in fCraftUI on shutdown.
 Change: Improved crash reporting for TargetInvokationException and TypeInitializerException errors.
 Change: All assemblies are now once again x86/x86_64/IA64 compatible.
 Change: Server.OnPlayerConnected event now supports cancellation.
484
 Feature: Added a way for IRC bot to use registered nicknames.
 Feature: /banall-related kicks are now announced in chat.
 Feature: /setspawn now actually changes player's spawn. Also, an optional PlayerName param allows temporarily changing other players' spawn point.
 Feature: Several improvements to /info. Info now shows whether player's nick or IP was banned, and hides undefined information for players who haven't ever logged in.
 Fix: Fixed crash in ConfigTool if announcements were disabled.
 Fix: Fixed /banall not matching IPs properly, and not counting kicks towards PlayerInfo.
 Fix: Fixed ConfigUI not shutting down properly if Server.Init() or Server.Start() failed.
 Fix: Fixed Config.LoadLogOptions() always leaving Debug enabled.
 Fix: Added Process.GetCurrentProcess().Refresh() to ServerInfo to improve accuracy of /sinfo stat reporting.
 Fix: Improved /wsave and /wload path handling on non-Windows platforms.
 Fix: Replaced some potentially unsafe string concatenation in Player.Message() with proper formatting.
 Fix: Attempting a workaround for Mono memory leak in World.UnloadMap
 Fix: Fixed ranks from pre-0.480 configs being loaded in wrong order. Sorry!
 Change: Added a brief delay before reconnecting IRC bot after getting kicked from a channel. 
 Change: PlayerDB is now saved every 60 seconds (instead of every 30).
 Change: Removed unused IRCBotQuitMsg config key, and added IRCRegisteredNick, IRCNickServ, and IRCNickServMessage keys.
 Change: Added a popup with crash information to ConfigTool.
 Change: Made announcements disabled by default.
483
 Feature: Myne/MyneCraft/Hyvebuild/iCraft maps can now be loaded from ConfigTool's "Add World" dialog.
 Fix: Fixed incorrect range checks for AnnouncementInterval and SaveInterval config keys (thanks to Shcaap for reporting).
 Fix: Fixed /hide showing a slightly different "player left" message compared to normal disconnect (thanks to Silverrock for reporting).
 Change: Added MC#-style "/z" alias for cuboid, by popular demand.
 Change: Hidden players can now receive PMs. The sender still gets the "No player found" message, but PMs are actually sent.
482
 Feature: Added new command aliases: "f" for "freeze", and "pat" for "patrol".
 Fix: Fixed typos in mute-related messages.
 Fix: Added missing triggers for OnPlayerListChanged event.
 Fix: Fixed /reloadconfig not changing several variables (like colors).
 Fix: Fixed antigrief defaulting to 35/5 (instead of unmetered).
 Fix: Fixed heartbeat counting hidden players.
 Fix: Fixed a rare ObjectDisposedException crash on shutdown when running fCraftUI.
 Change: Added a more informative disconnect message to players connecting with Alpha client.
 Change: Improved the way player disconnects are handled to be more reliable, and to drop disconnected players sooner.
 Change: Improved the way PlayerDB saving is triggered. New schedule reduces overall disk use and reduces possible data loss in case of crashes.
481
 Fixed a bug in Rank deserializer that set antiGriefBlock=antiGriefSeconds (messing up antigrief permissions).
 Fixed a few more references to "player class" terminology instead of "rank".

